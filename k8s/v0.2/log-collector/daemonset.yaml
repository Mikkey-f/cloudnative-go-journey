apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: log-collector
  labels:
    app: log-collector
    version: v0.2
spec:
  selector:
    matchLabels:
      app: log-collector
  
  # 更新策略
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1  # 更新时最多几个节点不可用
  
  template:
    metadata:
      labels:
        app: log-collector
        version: v0.2
      annotations:
        # Prometheus 抓取配置
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: collector
        image: log-collector:v0.2
        imagePullPolicy: IfNotPresent
        
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        # 环境变量：注入节点名称
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        
        # 资源限制
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        # 健康检查
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        
        # 挂载宿主机目录（只读）
        volumeMounts:
        - name: varlog
          mountPath: /var/log
          readOnly: true
        
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      
      # 卷定义
      volumes:
      # 宿主机日志目录
      - name: varlog
        hostPath:
          path: /var/log
          type: Directory
      
      # Docker 容器日志目录
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
          type: DirectoryOrCreate
      
      # 容忍污点：确保能部署到所有节点
      tolerations:
      # 容忍 NoSchedule 污点
      - effect: NoSchedule
        operator: Exists
      
      # 容忍 NoExecute 污点
      - effect: NoExecute
        operator: Exists
      
      # 特定污点示例（可选）
      # - key: node-role.kubernetes.io/master
      #   effect: NoSchedule
      
      # 节点选择器（可选）
      # 只部署到 Linux 节点
      nodeSelector:
        kubernetes.io/os: linux
      
      # 重启策略
      restartPolicy: Always
      
      # 优雅关闭时间
      terminationGracePeriodSeconds: 30
      
      # 服务账号（如果需要访问 K8s API）
      # serviceAccountName: log-collector

